git commit --amend: Permite si ya realizaste el commmit de los archivos y se te paso uno permite agregarlo sin crear un nuevo commit

git tag (numeroversion) -m '(mensaje)': Creacion de tag para la versiones

git tag (numeroversion) (NumeroCommit) 

Para borrar tag: git tag -d

Para renombrar tag: git tag -f -a (numeroversionNew) -m '(mensaje)', luego realizar git tag -d (numeroversionborrar)

----------------------------------------

git log : ver toda los commit
git log --oneline : bb3c926 ( master, tag: 0.5) Agregado Index
git log --oneline --graph : graficaciones de ramas

git log -(cantCommit) : Ver cantidad de commit

-----------------------------------------

Diferenciacion entre commit

git diff (commitDeComparacionConElActual) 
git diff (commitDeComparacionConElActual)  (compraracionotro)

------------------------------------------

git Reset

git reset --soft --mixed --hard

Reescribir

git reset --soft (commitdondequiere que se quede igual) : Quitar el commit pero mantener los archivos en el state

git reset --mixed (quita del estato en el commit y states )

git reset --hard (numerocommit): quita el archivo completo del working directory

------------------------------

git branch nombrenuevo
git branch -m nombrenuevo : nueva y moverse
git branch -m nombreviejo nombrenuevo: cambiar nombre

git branch (-d / -D ) nombrebranch : eliminar branch 
 
-------------------------------

git checkout -b nuevarama: creacion de nueva rama


--------------------------------

git stash: Permite guardar sin hacer ningun commit, a la hora de cambiar de ramas es util ya que no mueve los cambios hacia otra rama, este tiene que estar en el state

git stash apply: Realiza el primer cambio
git stash apply stash{nuevo}: Realiza el primer cambio


git stash list: muestra la lista de los stash

git stash drop stash@{0}:Elimina el stash

---------------------------
git cherry-pick numeroCommit: permite selecionar el commit y moverlo a la rama donde estas